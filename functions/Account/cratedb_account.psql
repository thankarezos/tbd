CREATE OR REPLACE FUNCTION userS()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    DROP TABLE IF EXISTS userS CASCADE;
    CREATE TABLE userS
    (
        sesionid text,
        username varchar(100),
        primary key(sesionid)
    );

    END;
$function$;


CREATE OR REPLACE FUNCTION "account"()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    DROP TABLE IF EXISTS account CASCADE;
    CREATE TABLE account
    (
        username varchar(100),
        pass varchar(100),
        primary key(username)
    );

    INSERT INTO account(username,pass) VALUES ('Thanasis', '1234'); 
    INSERT INTO account(username,pass) VALUES ('Peris', '1234');
    INSERT INTO account(username,pass) VALUES ('thanasis', '1234'); 
    INSERT INTO account(username,pass) VALUES ('peris', '1234'); 
    END;
$function$;

SELECT account();
select userS();


CREATE OR REPLACE FUNCTION checkaccount(users text,passs text)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    BEGIN
    IF EXISTS (
        SELECT 1 FROM account a WHERE a.username = users AND a.pass = passs
    )
    THEN
        INSERT into userS(sesionid,username) VALUES (CONCAT(pg_backend_pid(),pg_postmaster_start_time()),users);
        return 0;
    END IF;
        return 1;
    END;
$function$;

select * from userS

--select checkaccount('peris','1234')

-- CREATE OR REPLACE FUNCTION checkaccounts(varchar(100),varchar(100)) 
--     RETURNS integer AS $$
--         SELECT 1 FROM account WHERE username = $1 AND pass = $2;
-- $$  LANGUAGE sql
--select checkaccounts('peris','1234')

--DROP function checkaccount

--Select * from account

--DROP TABLE account CASCADE
