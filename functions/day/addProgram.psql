SELECT addProgram();


CREATE OR REPLACE FUNCTION getAddProgram(integer) 
RETURNS SETOF addProgram  AS $$
    SELECT * FROM addProgram WHERE sidpr = $1 ORDER BY sidad;
$$  LANGUAGE sql;

CREATE OR REPLACE FUNCTION addAddProgram(sidpr integer,sidad integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
        INSERT INTO addProgram (sidpr,namepr,sidad,name,type_ek,rating,time)
        SELECT programs.sid, programs.name, ekpompes.sid, ekpompes.name, type_ek, rating, time
        FROM programs,ekpompes
        WHERE programs.sid=sidpr AND ekpompes.sid=sidad ;
    END;
$function$;

-- CREATE OR REPLACE FUNCTION deleteAddProgram(idek integer,id integer)
--  RETURNS void
--  LANGUAGE plpgsql
-- AS $function$
--     BEGIN
--     DELETE FROM addProgram WHERE sidad = id AND sidpr = idek;
--     END;
-- $function$;



CREATE OR REPLACE FUNCTION getResultAddProgram(int,int,text,text,text,text) 
RETURNS setof addProgram AS
 $$
    SELECT * FROM addProgram 
    WHERE sidpr = $1
    AND
    CAST(sidad as TEXT) LIKE
    CONCAT(
    CASE
        WHEN $2 IS NULL THEN sidad ELSE $2 
    END,
    '%')
    AND LOWER(name) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $3 IS NULL THEN name ELSE $3
        END,
        '%')
    )
    AND LOWER(type_ek) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $4 IS NULL THEN type_ek ELSE $4
        END,
        '%')
    )
    AND rating =(
    CASE
        WHEN $5 IS NULL THEN rating ELSE $5
    END
    )
    AND cast(time AS text) LIKE
    CONCAT(
    CASE
        WHEN $6 IS NULL THEN time ELSE $6
    END,
    '%')
$$  LANGUAGE sql;


CREATE OR REPLACE FUNCTION getResultAddProgram(int,int,text,text,text,text) 
RETURNS setof ekpompes AS
 $$
    

    SELECT * FROM (

        SELECT sid, name, type_ek, rating, time
        FROM getProgram()
        EXCEPT
        SELECT sidad, name, type_ek, rating, time
        FROM getAddProgram($1)

    ) a
    WHERE
    CAST(sid as TEXT) LIKE
    CONCAT(
    CASE
        WHEN $2 IS NULL THEN sid ELSE $2 
    END,
    '%')
    AND LOWER(name) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $3 IS NULL THEN name ELSE $3
        END,
        '%')
    )
    AND LOWER(type_ek) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $4 IS NULL THEN type_ek ELSE $4
        END,
        '%')
    )
    AND rating =(
    CASE
        WHEN $5 IS NULL THEN rating ELSE $5
    END
    )
    AND cast(time as text) LIKE
    CONCAT(
    CASE
        WHEN $6 IS NULL THEN time ELSE $6
    END,
    '%') ORDER BY sid;
$$  LANGUAGE sql;


CREATE OR REPLACE FUNCTION checkif(idek integer,idsy integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM getAddProgram(idek) WHERE sidad = idsy) AND EXISTS (SELECT 1 FROM getPrograms() WHERE sid = idsy)
        THEN
            return 0;
            -- Den yparxei kai yparxei gia prosthiki
        ELSIF EXISTS (SELECT 1 FROM getAddProgram(idek) WHERE sidad = idsy) AND EXISTS (SELECT 1 FROM getPrograms() WHERE sid = idsy)
        THEN
            return 1;
            -- Yparxei hdh kai yparxei gia prosthiki
        ELSIF EXISTS (SELECT 1 FROM getAddProgram(idek) WHERE sidad = idsy) AND NOT EXISTS (SELECT 1 FROM getPrograms() WHERE sid = idsy)
        THEN
            return 2;
            -- yparxei kai den yparxei gia prosthiki

        ELSIF NOT EXISTS (SELECT 1 FROM getAddProgram(idek) WHERE sidad = idsy) AND NOT EXISTS (SELECT 1 FROM getPrograms() WHERE sid = idsy)
        THEN
            return 3;
            -- den yparxei kai den yparxei gia prosthiki
        ELSE
            return 4;
        END IF;
    END;
$function$;

CREATE OR REPLACE FUNCTION getAddProgram(integer) 
RETURNS SETOF addProgram  AS $$
    SELECT * FROM addProgram WHERE sidpr = $1 ORDER BY sidad;
$$  LANGUAGE sql;

