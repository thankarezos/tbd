CREATE OR REPLACE FUNCTION "programs"()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'pr_day') THEN 
    CREATE type pr_day as enum('Monday' ,'Tuesday','Wednesday', 'Thursday','Friday','Saturday','Sunday')  ;END IF;
    DROP TABLE IF EXISTS programs cascade;
    CREATE TABLE IF NOT EXISTS programs
    (
        identry SERIAL,
        sid int,
        name varchar(100),
        rating varchar,
        strtime int,
        endtime int,
        time int,
        day pr_day,
        primary key(identry)
    );
    
    
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','30','15','Monday');
    
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','90','60','Monday');
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','210','30','Monday');
    -- INSERT INTO programs(sid,name,rating,strtime,endtime,time,day) values ('1','kalhmera','18','0','30','30','Monday');
    -- INSERT INTO programs(sid,name,rating,strtime,endtime,time,day) values ('1','kalhmera','18','0','30','30','Monday');
    -- INSERT INTO programs(sid,name,rating,strtime,endtime,time,day) values ('1','kalhmera','18','0','30','30','Monday');
    
-- select * from ekpompes
-- select * from programs

    END;
$function$;
DROP TRIGGER updateT 
GO

-- create a new trigger
CREATE TRIGGER updateT
ON programs
AFTER INSERT
AS 
BEGIN   
    SET NOCOUNT ON;

    -- update your table, using a set-based approach
    -- from the "Inserted" pseudo table which CAN and WILL
    -- contain multiple rows!
    UPDATE programs SET i.endtime = i.time + i.strtime
    FROM Inserted i
    WHERE programs.identry = i.identry
END
GO


select * from programs;

CREATE OR REPLACE FUNCTION programs() RETURNS void AS $$
    DROP TABLE IF EXISTS programs cascade;
    CREATE TABLE IF NOT EXISTS programs
    (
        identry SERIAL,
        sid int,
        name varchar(100),
        rating varchar,
        strtime int,
        endtime int DEFAULT strtime+time ,
        time int,
        day enum('Monday' ,'Tuesday','Wednesday', 'Thursday','Friday','Saturday','Sunday'),
        primary key(identry)
    );
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','30','15','Monday');
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','90','60','Monday');
    INSERT INTO programs(sid,name,rating,strtime,time,day) values ('1','kalhmera','18','210','30','Monday');
$$  LANGUAGE sql;

SELECT programs();
CREATE OR REPLACE FUNCTION getPrograms() RETURNS SETOF programs  AS $$
    SELECT * FROM programs ORDER BY identry;
$$  LANGUAGE sql;

CREATE OR REPLACE FUNCTION addPrograms(sidE int, name text, strtime int, endtime int, times int, day text)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    INSERT INTO programs (sidE,name,strtime,endtime,time,day)
    VALUES (sidE,name,strtime,endtime,times,day);
    END;
$function$;

CREATE OR REPLACE FUNCTION deletePrograms(id int)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    DELETE FROM programs where identry = id;
    END;
$function$;



