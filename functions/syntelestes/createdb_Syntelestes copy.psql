CREATE OR REPLACE FUNCTION "syntelestesek"()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    drop table IF EXISTS syntelestesekp cascade;
    create table IF NOT EXISTS syntelestesekp
    (   
        sidek  integer,
        nameek varchar(20),
        sidsy integer,
        name varchar(20),
        surname varchar(20),
        role varchar(20),
        phoneNumber varchar(15),
        primary key(sidek,sidsy)
    );

    INSERT INTO syntelestesekp (sidek,nameek,sidsy,name,surname,role,phoneNumber)
    SELECT ekpompes.sid, ekpompes.name, syntelestes.sid, syntelestes.name, surname, role, phoneNumber
    FROM ekpompes,syntelestes
    where ekpompes.sid=1 and syntelestes.sid=1;

    INSERT INTO syntelestesekp (sidek,nameek,sidsy,name,surname,role,phoneNumber)
    SELECT ekpompes.sid, ekpompes.name, syntelestes.sid, syntelestes.name, surname, role, phoneNumber
    FROM ekpompes,syntelestes
    where ekpompes.sid=2 and syntelestes.sid=2 ;

    INSERT INTO syntelestesekp (sidek,nameek,sidsy,name,surname,role,phoneNumber)
    SELECT ekpompes.sid, ekpompes.name, syntelestes.sid, syntelestes.name, surname, role, phoneNumber
    FROM ekpompes,syntelestes
    where ekpompes.sid=2 and syntelestes.sid=1 ;


    INSERT INTO syntelestesekp (sidek,nameek,sidsy,name,surname,role,phoneNumber)
    SELECT ekpompes.sid, ekpompes.name, syntelestes.sid, syntelestes.name, surname, role, phoneNumber
    FROM ekpompes,syntelestes
    where ekpompes.sid=1 and syntelestes.sid=3 ;
    
    END;
$function$;

select syntelestesek();


CREATE OR REPLACE FUNCTION getSyntelestesek(integer) 
RETURNS SETOF syntelestesekp  AS $$
    SELECT * FROM syntelestesekp where sidek = $1 order by sidsy;
$$  LANGUAGE sql;

CREATE OR REPLACE FUNCTION addSyntelestesek(sidek integer,sidsy integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
        INSERT INTO syntelestesekp (sidek,nameek,sidsy,name,surname,role,phoneNumber)
        SELECT ekpompes.sid, ekpompes.name, syntelestes.sid, syntelestes.name, surname, role, phoneNumber
        FROM ekpompes,syntelestes
        where ekpompes.sid=sidek and syntelestes.sid=sidsy ;
    END;
$function$;

CREATE OR REPLACE FUNCTION deleteSyntelestesek(idek integer,id integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
    BEGIN
    DELETE FROM syntelestesekp where sidsy = id and sidek = idek;
    END;
$function$;



CREATE OR REPLACE FUNCTION getResultSyntelestesek(int,int,text,text,text,text) 
RETURNS setof syntelestesekp AS
 $$
    Select * from syntelestesekp 
    where sidek = $1
    AND
    CAST(sidsy as TEXT) like
    CONCAT(
    CASE
        WHEN $2 is null then sidsy else $2 
    end,
    '%')
    AND LOWER(name) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $3 is null then name else $3
        end,
        '%')
    )
    AND LOWER(surname) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $4 is null then surname else $4
        end,
        '%')
    )
    AND role =(
    CASE
        WHEN $5 is null then role else $5
    end
    )
    AND cast(phoneNumber as text) like
    CONCAT(
    CASE
        WHEN $6 is null then phoneNumber else $6
    end,
    '%')
$$  LANGUAGE sql;


CREATE OR REPLACE FUNCTION getResultSykminus(int,int,text,text,text,text) 
RETURNS setof syntelestes AS
 $$
    

    Select * from (

        select sid, name, surname, role, phoneNumber
        from getSyntelestes()
        EXCEPT
        select sidsy, name, surname, role, phoneNumber
        from getSyntelestesek($1)

    ) a
    where
    CAST(sid as TEXT) like
    CONCAT(
    CASE
        WHEN $2 is null then sid else $2 
    end,
    '%')
    AND LOWER(name) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $3 is null then name else $3
        end,
        '%')
    )
    AND LOWER(surname) LIKE
    LOWER(
        CONCAT('%',
        CASE
            WHEN $4 is null then surname else $4
        end,
        '%')
    )
    AND role =(
    CASE
        WHEN $5 is null then role else $5
    end
    )
    AND cast(phoneNumber as text) like
    CONCAT(
    CASE
        WHEN $6 is null then phoneNumber else $6
    end,
    '%') order by sid;
$$  LANGUAGE sql